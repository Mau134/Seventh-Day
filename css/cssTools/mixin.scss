@import "variables";
// @use 'variables' as *;

@mixin mobile {
  @media (max-width: $mobi_res) {
    @content;
  }
}

@mixin desktop {
  @media (min-width: $mobi_res) {
    @content;
  }
}

@mixin button_def($type: null) {
  border: solid thin white;
  padding: $pad;
  text-transform: uppercase;
  box-shadow: border(raise_shadow);
  margin-bottom: 0.2em;
  cursor: pointer;

  $hover_color: color(primary_light);
  $hover_bg: color(primary_dark);

  @if ($type == "primary") {
    background: color(btn_primary);
    border-color: color(btn_primary);
    color: white;
  } @else if ($type == "second") {
    background: color(btn_second);
    border-color: color(primary);
    color: color(primary);
  } @else {
    background: white;
    border: none;
    color: color(primary);
  }

  &:hover {
    color: $hover_color;
    background: $hover_bg;
  }
}

@mixin flexi($direction: row, $position: center, $align: center, $width: 100%) {
  display: flex;
  align-items: $align;
  flex-direction: $direction;
  justify-content: $position;
  width: $width;
}

@mixin grid($min, $gap) {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax($min, 1fr));
  gap: $gap;
}

@mixin position($type, $top: null, $right: null, $bottom: null, $left: null, $zindex: null) {
  position: $type;
  top: $top;
  right: $right;
  bottom: $bottom;
  left: $left;
  z-index: $zindex;
}

@mixin size($w, $h: null, $max_w: null, $max_h: null, $min_w: null, $min_h: null) {
  width: $w;
  height: $h;
  max-width: $max_w;
  max-height: $max_h;
  min-width: $min_w;
  min-height: $min_h;
}

@mixin input_def {
  border: none;
  background: white;
  width: 100%;
  padding: ($pad + 0.3);
  caret-color: color(primary);
  margin-bottom: 0.5em;
}

@mixin form_def {
  input,
  textarea {
    @include input_def;
    min-width: 100%;
    max-width: 100%;
  }
  textarea {
    min-height: 3em;
    max-height: 20em;
  }
  button[type="submit"] {
    @include button_def("primary");
  }

  button[type="reset"] {
    @include button_def("second");
  }
}

@mixin table_def {
  @include size(100%, null);
  border-collapse: collapse;
  border: none;
  padding: 0.2em;
  width: 100%;
  background: color(main_item_bg);
  margin: 1em 0 1em 0;

  td,
  th {
    padding: $pad;
  }
}

@mixin column($count, $mobile_count) {
  column-count: $count;
  column-gap: 1.5em;
  column-rule: 1em none transparent;
  @include mobile {
    column-count: $mobile_count;
  }
}

@mixin fixed_bg_image($src, $repeat) {
  background-image: url($src);
  background-repeat: $repeat;
  background-size: auto;
  background-attachment: fixed;
}

@mixin center_item($margin_top, $text_direction: null) {
  // does not work well with buttons so have to set text align to a specific direction where the buttons will be,
  display: block;
  margin: $margin_top auto;
  @if ($text_direction) {
    text-align: $text_direction; //use this to center buttons as well
  }
}

@mixin nav($bg: null, $txt_color: null, $shadow: null) {
  @include position(fixed, 0, 0, null, 0);
  @include size(null, 3em);
  @include flexi(row, space-between, center);
  z-index: $nav-zindex;
  padding: 0 1em 0 1em;
  $textcolor: color(nav_txt);
  $main_bg_color: color(nav_bg);
  @if ($bg) {
    $main_bg_color: $bg;
  }
  @if ($txt_color) {
    $textcolor: $txt_color;
  }
  @if ($shadow) {
    box-shadow: 0px 0px 20px 0px color(faint_shadow);
  }
  background: $main_bg_color; // this is here so that the color can be reset
  .nav-title {
    color: $textcolor;
  }
  img {
    @include size(70px, 35px);
    margin-top: 5px;
    object-fit: contain;
  }
  h3 {
    margin: 0;
    cursor: pointer;
    a {
      color: $textcolor;
      text-decoration: none;
    }
  }
  .on_mobile {
    @include mobile {
      &:after {
        content: "☰";
        @include position(absolute, 0.8em, 0.8em, null, null);
        @include size(1em, null);
        font-size: $nav-icon-size;
        line-height: 1;
        text-align: center;
        margin-top: -($nav-icon-size / 2);
        margin-left: -($nav-icon-size / 2);
        color: $textcolor;
      }
      &.is-open {
        overflow: visible;
        &:after {
          content: "✕";
          color: $textcolor;
        }
      }
    }
  }
  #nav_items {
    list-style: none;
    margin: 0;
    padding: 0;
    width: auto;
    max-width: 96%;
    display: block;
    position: static;
    background: $main_bg_color;
    @include mobile {
      background: #7bb2c2;
      @include size(100%, null);
      @include position(absolute, 0, 0, null, 0.5em);
      margin-top: 3em;
      text-align: center;
      display: none;
      z-index: $nav-zindex;
    }
    #nav_item {
      display: inline-block;
      color: $textcolor;
      padding: 0;
      @include mobile {
        display: block;
        margin: 1em;
      }
      a {
        position: relative;
        padding: 1em;
        color: $textcolor;
        text-decoration: none;
        display: block;
        cursor: pointer;
        white-space: nowrap;
        line-height: $nav-hit-area;
        &:hover::before {
          transform: scale(1, 1);
        }
        &::before {
          content: "";
          display: block;
          height: 2px;
          background: $textcolor;
          @include position(absolute, null, 0, 0, 0);
          transform: scale(0, 1);
          transition: transform ease-in-out 250ms;
          transform-origin: left;
        }
      }
    }
    &.is-open {
      display: block;
      transition: 1s;
      transform-origin: top;
      animation: opening_nav ease-in-out;
    }
  }
}

@mixin nav_box($bg: null, $txt_color: null, $shadow: null) {
  @include position(fixed, 1em, 2em, null, 2em);
  @include mobile {
    @include position(fixed, 1em, 0.5em, null, 0.5em);
  }
  @include size(null, 3em);
  @include flexi(row, space-between, center, null);
  border-radius: .5em;
  z-index: $nav-zindex;
  padding: 0 1em 0 1em;
  $textcolor: color(nav_txt);
  $main_bg_color: $bg;
  @if ($bg) {
    $main_bg_color: $bg;
  }
  @if ($txt_color) {
    $textcolor: $txt_color;
  }
  @if ($shadow) {
    box-shadow: 0px 0px 20px 0px color(faint_shadow);
  }
  background: $main_bg_color; // this is here so that the color can be reset
  .nav-title {
    color: $textcolor;
  }
  img {
    @include size(70px, 35px);
    margin-top: 5px;
    object-fit: contain;
  }
  h3 {
    margin: 0;
    cursor: pointer;
    a {
      color: $textcolor;
      text-decoration: none;
    }
  }
  .on_mobile {
    @include mobile {
      &:after {
        content: "☰";
        @include position(absolute, 0.8em, 0.8em, null, null);
        @include size(1em, null);
        font-size: $nav-icon-size;
        line-height: 1;
        text-align: center;
        margin-top: -($nav-icon-size / 2);
        margin-left: -($nav-icon-size / 2);
        color: $textcolor;
      }
      &.is-open {
        overflow: visible;
        &:after {
          content: "✕";
          color: $textcolor;
        }
      }
    }
  }
  #nav_items {
    list-style: none;
    margin: 0;
    padding: 0;
    width: auto;
    max-width: 96%;
    display: block;
    position: static;
    background: $main_bg_color;
    @include mobile {
      background: $bg;
      @include size(100%, null);
      @include position(absolute, 0, 0, null, 0.5em);
      margin-top: 3em;
      text-align: center;
      display: none;
      z-index: $nav-zindex;
    }
    #nav_item {
      display: inline-block;
      color: $textcolor;
      padding: 0;
      @include mobile {
        display: block;
        margin: 1em;
      }
      a {
        position: relative;
        padding: 1em;
        color: $textcolor;
        text-decoration: none;
        display: block;
        cursor: pointer;
        white-space: nowrap;
        line-height: $nav-hit-area;
        &:hover::before {
          transform: scale(1, 1);
        }
        &::before {
          content: "";
          display: block;
          height: 2px;
          background: $textcolor;
          @include position(absolute, null, 0, 0, 0);
          transform: scale(0, 1);
          transition: transform ease-in-out 250ms;
          transform-origin: left;
        }
      }
    }
    &.is-open {
      display: block;
      transition: 1s;
      transform-origin: top;
      animation: opening_nav ease-in-out;
    }
  }
}

@mixin ul_def() {
  margin: 0.3em;
  padding: 0;
  li {
    list-style-type: none;
    width: 100%;
    transition: all 0.4s;
    @content;
  }
}

@mixin ul_clickable($margin_top, $padding, $bg-color, $color, $alt_color: null) {
  @include ul_def() {
    color: $color;
    margin-top: $margin_top;
    padding: $padding;
    background-color: $bg-color;
    cursor: pointer;
    &:hover {
      transform: scale(1.001);
      box-shadow: 0px 0px 1px 0px #bfbfbfb5;
    }
    &.alt {
      @if ($alt_color) {
        color: $alt_color;
        background-color: lighten($bg-color, 20%);
        cursor: default;
      } @else {
        color: color(txt_primary);
      }
      &:hover {
        transform: scale(1);
        box-shadow: none;
      }
    }
  }
}

@mixin ul_unclickable($margin_top, $padding, $border-color: null, $alt_color: null) {
  $bc: #cccccc;
  @if ($border-color) {
    $bc: $border-color;
  }

  @include ul_def() {
    margin-top: $margin_top;
    padding: $padding;
    border: border(thin_border);
    border-color: $bc;
    &.alt {
      @if ($alt_color) {
        color: $alt_color;
        border-color: lighten($bc, 10%);
      } @else {
        color: color(txt_primary);
      }
    }
  }
}

// copied from the sass website
// @mixin order($height, $selectors...) {
//   @for $i from 0 to length($selectors) {
//     #{nth($selectors, $i + 1)} {
//       position: absolute;
//       height: $height;
//       margin-top: $i * $height;
//     }
//   }
// }
